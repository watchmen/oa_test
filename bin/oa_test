#!/usr/bin/env ruby
def howto_oa_test
puts <<END

How to oa_test:
~~~~~~~~~~~~~~~~~~~~~~~
syntax:
oa_test [--consumer:token/secret] --yauth:login/passwd [--return:body|body_hash|boolean|object] [--host:host] [--api:path]
params --host must prefix with "http://"
params --api must prefix with "/"
Enjoy... 

END

end

arg = ARGV 
if arg.size>0
  consumer = arg.select{|x|/^--consumer/=~x}[0]
  yauth    = arg.select{|x|/^--yauth/=~x}[0]
  retrn    = arg.select{|x|/^--return/=~x}[0]
  host     = arg.select{|x|/^--host/=~x}[0]
  api      = arg.select{|x|/^--api/=~x}[0]
  cons     = consumer ? consumer.split(':')[1].split('/') : [nil,nil]
  yths     = yauth.split(':')[1].split('/')

  require 'rubygems'
  require 'oa_test'

  OA = oa = OAuthTest.
  new(
   :key    => cons[0],
   :secret => cons[1],
   :return => (retrn ? retrn.split(':')[1].to_sym : :body),
   :host   => (host ? host.split(':')[1,99].join(':') : nil),
   :api    => (api ? api.split(':')[1]: nil)
  ).
  yauth(
   :login  => yths[0].strip,
   :passwd => yths[1].strip
  )
  
  # add constanta and action...
  class Object
    def oa
      OA
    end
    
    alias_method :http, :oa
    
  end
  
  # remove non irb arguments...
  ARGV.clear
  (arg - [consumer,yauth,retrn,host,api].compact).each do |v|
    ARGV.push v
  end
  
  require 'irb'
  puts ''
  puts "PATH: #{oa.host}#{oa.api}<path>"
  puts "Your instance object stored in OA|oa|http"
  puts "The response object: http.resp"
  puts "Ex: http.get '/me.json'"
  puts ''
  
  IRB.start      
else
  howto_oa_test
end
